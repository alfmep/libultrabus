
libultrabus - A C++ library for writing D-Bus applications (currently only for Linux).



dbus-tool - A utility application for executing D-Bus operaions.


Usage: dbus-tool [OPTIONS] <command> [command argument ...]

Common options:
  -y, --system    Connect to the system bus instead of the session bus.
  -h, --help      Print this help message and exit.

Commands:
  list
      List the bus names(services) on this connection.
      Options:
          -a, --all            Also include unique bus names.
          -x, --activatable    Instead of already connected names,
                               list all names that can be activated on the bus.

  call <service> <object_path> <interface> <method> [argument ...]
      Call a specific method on an object in a DBus service.
      Any returned arguments is printed to standard output.

  introspect <service> [object_path]
      Print introspect data for a specific object in a DBus service.
      If the object_path arguments is omitted, the root object "/" is used.
      Options:
          -r, --raw    Don't parse the introspect data, print it "as is".

  get <service> <object_path> <interface> [property]
      Get(and print) the property of an object in a DBus service.
      If argument 'property' is omitted, the names and values of all properties are printed to standard output.
      Options:
          -s, --signature    Print the DBus signature of the properties.

  set <service> <object_path> <interface> <property> <value>
      Set the property of an object in a DBus service.

  objects <service> [object_path]
      List all objects beloning to a specific service and object.
      If the object_path arguments is omitted, the root object "/" is used.

  listen <service> <object_path> <interface> <signal>
      Listen for a specific DBus signal.
      When a signal is received, is is printed to standard output.
      Stop listening and exit the program by pressing Ctrl-C.

  start <service>
      Try to launch the executable associated with a service name.
      Options:
          -q, --quiet    Suppress output, exit with 0 on success and 1 on falure.

  owner <service>
      Print the unique bus name of the primary owner of the service name.

  names <bus-name>
      Print the names acquired by the bus connection.

  ping <service>
      Ping a service on the bus and print the response time in milliseconds.
      Options:
          -q, --quiet    Suppress output, exit with 0 on success and 1 on falure.

  monitor
      Monitor messages on the message bus and display them on standard output.
